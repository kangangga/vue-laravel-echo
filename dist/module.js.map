{"mappings":"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","sources":["src/main.js","src/VueEcho.js","src/globalEmitter.js","src/createMixin.js","src/utils/index.js"],"sourcesContent":["import \"pusher-js\";\nimport VueEcho from \"./VueEcho\";\nimport createMixin from \"./createMixin\";\n\nconst defaultOptions = {\n  broadcaster: \"pusher\",\n};\n\nfunction install(app, options) {\n  const auth = options.auth || {};\n  const { headers } = auth;\n  const echo = new VueEcho({\n    ...defaultOptions,\n    ...options,\n  });\n\n  app.mixin(createMixin(echo));\n}\n\nexport default { install };\n","import Echo from \"laravel-echo\";\nimport camelCase from \"camelcase\";\nimport globalEmitter from \"./globalEmitter\";\n\nexport default class VueEcho extends Echo {\n  constructor(options) {\n    super(options);\n    this.events = [];\n    this.options = options;\n    this.setEvent();\n  }\n\n  on(eventName, callback) {\n    if (this.options.broadcaster == \"pusher\") {\n      this.connector.pusher.connection.bind(eventName, callback);\n    } else if (this.options.broadcaster == \"socket.io\") {\n      this.connector.socket.on(eventName, callback);\n    } else if (this.options.broadcaster == \"null\") {\n      globalEmitter.$on(eventName, callback);\n    } else if (typeof this.opti$s.broadcaster == \"function\") {\n      globalEmitter.$on(eventName, callback);\n    }\n  }\n\n  setEvent(events = []) {\n    if (this.options.broadcaster == \"pusher\") {\n      this.events = [\n        \"error\",\n        \"failed\",\n        \"connected\",\n        \"connecting\",\n        \"initialized\",\n        \"unavailable\",\n        \"state_change\",\n      ];\n      this.bindingEvent(this.connector.pusher.connection.bind);\n    } else if (this.options.broadcaster == \"socket.io\") {\n      this.events = [\n        \"connect\",\n        \"reconnect\",\n        \"connection\",\n        \"disconnect\",\n        \"connect_error\",\n        \"reconnect_attempt\",\n      ];\n      this.bindingEvent(this.connector.socket.on);\n    }\n  }\n\n  bindingEvent(instance) {\n    this.events.forEach((event) => {\n      let method = camelCase([\"on\", event]);\n      this[method] = (callback) => {\n        instance(event, (data) => {\n          callback(data);\n        });\n      };\n    });\n  }\n}\n","import emitter from \"tiny-emitter/instance\";\n\nexport default {\n  $on: (...args) => emitter.on(...args),\n  $once: (...args) => emitter.once(...args),\n  $off: (...args) => emitter.off(...args),\n  $emit: (...args) => emitter.emit(...args),\n};\n","import { isFunction } from \"./utils\";\n\nexport default (echo) => ({\n  created() {\n    const exluceEventMethods = [\"presence\", \"private\"];\n    this.$echo = echo;\n    this.$channel = this.$channel || {};\n    this.$bindings = this.$bindings || {};\n    this.$options.laravelEcho = this.$options.laravelEcho || {};\n    const { laravelEcho } = this.$options;\n\n    const registerEvent = (events, channel) => {\n      Object.keys(events).forEach(function (event) {\n        if (!exluceEventMethods.includes(event)) {\n          this.$bindings[channel] = [];\n          this.$channel[channel].listen(event, (payload) => {\n            if (isFunction(events[event])) {\n              events[event].bind(this)(payload);\n            }\n          });\n          this.$bindings[channel].push(event);\n        }\n      }, this);\n    };\n\n    Object.keys(laravelEcho).forEach((channel) => {\n      if (channel.startsWith(\"private:\")) {\n        this.$channel[channel] = echo.private(channel.replace(\"private:\", \"\"));\n      } else if (channel.startsWith(\"presence:\")) {\n        this.$channel[channel] = echo.join(channel.replace(\"presence:\", \"\"));\n      } else {\n        this.$channel[channel] = echo.channel(channel);\n      }\n\n      echo[channel] = this.$channel[channel];\n      registerEvent(laravelEcho[channel], channel);\n    });\n  },\n  beforeDestroy() {\n    for (const channel in this.$bindings) {\n      if (Object.hasOwnProperty.call(this.$bindings, channel)) {\n        let ch = echo.private(channel);\n        this.$bindings[channel].forEach((listener) => {\n          ch.stopListening(listener);\n        });\n      }\n    }\n  },\n  destroy() {\n    for (const channel in this.$bindings) {\n      if (Object.hasOwnProperty.call(this.$bindings, channel)) {\n        delete this.$bindings[channel];\n      }\n    }\n  },\n});\n","export const isFunction = (obj) => typeof obj === \"function\";\n\nexport const isString = (value) => typeof value === \"string\";\n\nexport const isLaravelEcho = (obj) =>\n  !!obj && isFunction(obj.on) && isFunction(obj.emit);\n\nexport const isSocketIo = (obj) =>\n  !!obj && isFunction(obj.on) && isFunction(obj.emit);\n\nexport const unwrapIfSingle = (args) =>\n  args && args.length <= 1 ? args[0] : args;\n\nexport const pipe =\n  (...fns) =>\n  (x) =>\n    fns.reduce((v, f) => f(v), x);\n\nexport const prefixWith = (prefix) => (string) => prefix + string;\n\nexport const augmentMethod = (obj, methodKey, cb) => {\n  const originalFn = obj[methodKey];\n  obj[methodKey] = (...args) => {\n    originalFn.call(obj, ...args);\n    cb(...args);\n  };\n};\n\nexport const log = (...params) => {\n  if (process.env.NODE_ENV === \"development\") {\n    console.log(...params);\n  }\n};\n"],"names":[],"version":3,"file":"module.js.map"}